{"version":3,"sources":["components/Editor/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","displayName","language","value","onChange","useState","isOpen","setOpen","className","onClick","prevState","icon","faCompressAlt","faExpandAlt","options","mode","theme","lineNumbers","lineWrapping","onBeforeChange","editor","data","editorValue","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearInterval","title","sandbox","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA4CeA,MAlCf,YAA2D,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAAW,EAM5BC,oBAAS,GANmB,mBAM/CC,EAN+C,KAMvCC,EANuC,KAYtD,OACI,sBAAKC,UAAS,yBAAoBF,EAAS,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACI,6BAAKP,IACL,wBAAQQ,QARD,WACfF,GAAQ,SAAAG,GAAS,OAAKA,MAOd,SACA,cAAC,IAAD,CAAiBC,KAAML,EAASM,IAAgBC,WAGpD,cAAC,aAAD,CACIV,MAAOA,EACPW,QAAS,CACLC,KAAMb,EACNc,MAAO,WACPC,aAAa,EACbC,cAAc,GAElBC,eA1BS,SAACC,EAAQC,EAAMC,GAChClB,EAASkB,UCTF,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAD0B,EAG7BnB,oBAAS,WAC/B,IAAMsB,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEd,oBAAjBF,EACCA,IAEAA,KAXwC,mBAGhDtB,EAHgD,KAGzC6B,EAHyC,KAoBvD,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUhC,MAClD,CAACuB,EAAavB,IAEV,CAACA,EAAO6B,GCqCJI,MAzDf,WAAgB,IAAD,EAEWb,EAAgB,OAAQ,IAFnC,mBAENc,EAFM,KAEAC,EAFA,OAGSf,EAAgB,MAAO,IAHhC,mBAGNgB,EAHM,KAGDC,EAHC,OAIOjB,EAAgB,KAAM,IAJ7B,mBAINkB,EAJM,KAIFC,EAJE,OAKerC,mBAAS,IALxB,mBAKNsC,EALM,KAKEC,EALF,KAsBb,OAfAX,qBAAU,WAER,IAAIY,EAAUC,YAAW,WACvBF,EAAU,yBAAD,OACCP,EADD,mCAEEE,EAFF,qCAGGE,EAHH,gCAKR,KAEH,OAAO,WACLM,cAAcF,MAEf,CAACR,EAAME,EAAKE,IAGb,sBAAKjC,UAAU,MAAf,UACE,0BAASA,UAAU,cAAnB,UACE,cAAC,EAAD,CACEN,SAAU,MACVD,YAAa,OACbE,MAAOkC,EACPjC,SAAUkC,IAEZ,cAAC,EAAD,CACEpC,SAAU,MACVD,YAAa,MACbE,MAAOoC,EACPnC,SAAUoC,IAEZ,cAAC,EAAD,CACEtC,SAAU,aACVD,YAAa,KACbE,MAAOsC,EACPrC,SAAUsC,OAGd,yBAASlC,UAAU,cAAnB,SACI,wBACEwC,MAAM,SACNC,QAAQ,gBACRC,MAAM,OACNC,OAAO,OACPR,OAAQA,UCjDpBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0d30314.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Editor({displayName, language, value, onChange}) {\r\n\r\n    const handleChange = (editor, data, editorValue) => {\r\n        onChange(editorValue);\r\n    }\r\n\r\n    const [isOpen, setOpen] = useState(true);\r\n\r\n    const toggleOpen = () => {\r\n        setOpen(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-wrapper ${isOpen ? '' : 'collapsed'}`}>\r\n            <div className='editor-title'>\r\n                <h3>{displayName}</h3>\r\n                <button onClick={toggleOpen}>\r\n                <FontAwesomeIcon icon={isOpen ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                value={value}\r\n                options={{\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true,\r\n                    lineWrapping: true\r\n                }}\r\n                onBeforeChange={handleChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst PREFIX = 'codepen-clone-';\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n        \r\n        if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if(typeof initialValue === 'function') {\r\n            return initialValue();\r\n        } else {\r\n            return initialValue;\r\n        }\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Editor from \"./components/Editor/Editor\";\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nfunction App() {\r\n\r\n  const [html, setHtml] = useLocalStorage('html', '');\r\n  const [css, setCss] = useLocalStorage('css', '');\r\n  const [js, setJs] = useLocalStorage('js', '');\r\n  const [srcDoc, setSrcDoc] = useState('');\r\n\r\n  useEffect(() => {\r\n\r\n    let timeout = setTimeout(() => {\r\n      setSrcDoc(`<html>\r\n        <body>${html}</body>\r\n        <style>${css}</style>\r\n        <script>${js}</script>\r\n      </html>`)\r\n    }, 250);\r\n    \r\n    return () => {\r\n      clearInterval(timeout);\r\n    }\r\n  }, [html, css, js]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"editor-pane\">\r\n        <Editor\r\n          language={'xml'}\r\n          displayName={'html'}\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language={'css'}\r\n          displayName={'css'}\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          language={'javascript'}\r\n          displayName={'js'}\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </section>\r\n      <section className=\"result-pane\">\r\n          <iframe\r\n            title=\"output\"\r\n            sandbox=\"allow-scripts\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            srcDoc={srcDoc}\r\n           />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}